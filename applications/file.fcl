// Block definition FUNCTION_BLOCK fuzzyblock1// Define input variablesVAR_INPUT
    newTH : REAL;
    oldTH : REAL;
    timeDiff : REAL;
END_VAR

// Define output variable
VAR_OUTPUT
    estimatedTH : REAL;
END_VAR

// Fuzzify input variable 'newTH'
FUZZIFY newTH
  TERM VL := (0, 1) (4, 0) ;
  TERM L := (0, 1) (4, 0) ;
  TERM M := (1, 0) (4,1) (6,1) (9,0);
    TERM H := (6, 0) (9, 1);
    TERM VH := (6, 0) (9, 1);
END_FUZZIFY

// Fuzzify input variable 'oldTH'
FUZZIFY oldTH
  TERM VL := (0, 1) (4, 0) ;
    TERM L := (0, 1) (4, 0) ;
    TERM M := (1, 0) (4,1) (6,1) (9,0);
    TERM H := (6, 0) (9, 1);
    TERM VH := (6, 0) (9, 1);
END_FUZZIFY

// Fuzzify input variable 'timeDiff' - Fix Tmax=20 (an empirical value for slow channel)
FUZZIFY oldTH
    TERM low := (0, 5) (7, 1) ; 		//recent
    TERM medium := (1, 0) (4,1) (6,1) (9,0);
    TERM high := (6, 0) (9, 1);			//old
END_FUZZIFY

// Defzzzify output variable 'estimatedTH' 
DEFUZZIFY estimatedTH 
  TERM VL := (0, 1) (4, 0) ;
    TERM L := (0, 1) (4, 0) ;
    TERM M := (1, 0) (4,1) (6,1) (9,0);
    TERM H := (6, 0) (9, 1);
    TERM VH := (6, 0) (9, 1);
    // Use 'Center Of Gravity' defuzzification method
    METHOD : COG;
    // Default value is 0 (if no rule activates defuzzifier)
    DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK No1
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

    RULE 1 : IF timeDiff IS high AND newTH IS VL 
                THEN estimatedTH IS VL;

    RULE 2 : IF timeDiff IS high AND newTH IS L 
                THEN estimatedTH IS L;

    RULE 3 : IF timeDiff IS high AND newTH IS M 
                THEN estimatedTH is M;

    RULE 4 : IF timeDiff IS high AND newTH IS H 
                THEN estimatedTH IS H;

    RULE 5 : IF timeDiff IS high AND newTH IS VH 
                THEN estimatedTH is VH;
END_RULEBLOCK

END_FUNCTION_BLOCK
